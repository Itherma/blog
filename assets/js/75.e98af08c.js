(window.webpackJsonp=window.webpackJsonp||[]).push([[75],{502:function(t,e,s){"use strict";s.r(e);var a=s(0),n=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"一-几个开发中经常会遇到的问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-几个开发中经常会遇到的问题"}},[t._v("#")]),t._v(" 一.几个开发中经常会遇到的问题")]),t._v(" "),e("p",[t._v("以下几个问题是我们在实际开发中经常会遇到的场景，下面用几个简单的示例代码来还原一下。")]),t._v(" "),e("h3",{attrs:{id:"_1-setstate是同步还是异步的-为什么有的时候不能立即拿到更新结果而有的时候可以"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-setstate是同步还是异步的-为什么有的时候不能立即拿到更新结果而有的时候可以"}},[t._v("#")]),t._v(" 1.setState是同步还是异步的，为什么有的时候不能立即拿到更新结果而有的时候可以?")]),t._v(" "),e("h4",{attrs:{id:"_1-1-钩子函数和react合成事件中的setstate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-钩子函数和react合成事件中的setstate"}},[t._v("#")]),t._v(" 1.1 钩子函数和React合成事件中的"),e("code",[t._v("setState")])]),t._v(" "),e("p",[t._v("现在有两个组件")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("  componentDidMount() {\n    console.log('parent componentDidMount');\n  }\n\n  render() {\n    return (\n      <div>\n        <SetState2></SetState2>\n        <SetState></SetState>\n      </div>\n    );\n  }\n复制代码\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br")])]),e("p",[t._v("组件内部放入同样的代码，并在"),e("code",[t._v("Setstate1")]),t._v("中的"),e("code",[t._v("componentDidMount")]),t._v("中放入一段同步延时代码，打印延时时间：")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("  componentWillUpdate() {\n    console.log('componentWillUpdate');\n  }\n\n  componentDidUpdate() {\n    console.log('componentDidUpdate');\n  }\n\n  componentDidMount() {\n    console.log('SetState调用setState');\n    this.setState({\n      index: this.state.index + 1\n    })\n    console.log('state', this.state.index);\n    \n    console.log('SetState调用setState');\n    this.setState({\n      index: this.state.index + 1\n    })\n    console.log('state', this.state.index);\n  }\n复制代码\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br")])]),e("p",[t._v("下面是执行结果：")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/sunnyxujian/image-store/main/169197bbdc7ae14e_tplv-t2oaga2asx-zoom-in-crop-mark_1304_0_0_0.awebp",alt:"image"}})]),t._v(" "),e("p",[t._v("说明：")]),t._v(" "),e("ul",[e("li",[t._v("1.调用"),e("code",[t._v("setState")]),t._v("不会立即更新")]),t._v(" "),e("li",[t._v("2.所有组件使用的是同一套更新机制，当所有组件"),e("code",[t._v("didmount")]),t._v("后，父组件"),e("code",[t._v("didmount")]),t._v("，然后执行更新")]),t._v(" "),e("li",[t._v("3.更新时会把每个组件的更新合并，每个组件只会触发一次更新的生命周期。")])]),t._v(" "),e("h4",{attrs:{id:"_1-2-异步函数和原生事件中的setstate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-异步函数和原生事件中的setstate"}},[t._v("#")]),t._v(" 1.2 异步函数和原生事件中的"),e("code",[t._v("setstate")]),t._v("？")]),t._v(" "),e("p",[t._v("在"),e("code",[t._v("setTimeout")]),t._v("中调用"),e("code",[t._v("setState")]),t._v("（例子和在浏览器原生事件以及接口回调中执行效果相同）")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("  componentDidMount() {\n    setTimeout(() => {\n      console.log('调用setState');\n      this.setState({\n        index: this.state.index + 1\n      })\n      console.log('state', this.state.index);\n      console.log('调用setState');\n      this.setState({\n        index: this.state.index + 1\n      })\n      console.log('state', this.state.index);\n    }, 0);\n  }\n复制代码\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br")])]),e("p",[t._v("执行结果：")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/2/23/169197bbda86af04~tplv-t2oaga2asx-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"image"}})]),t._v(" "),e("p",[t._v("说明：")]),t._v(" "),e("ul",[e("li",[t._v("1.在父组件"),e("code",[t._v("didmount")]),t._v("后执行")]),t._v(" "),e("li",[t._v("2.调用"),e("code",[t._v("setState")]),t._v("同步更新")])]),t._v(" "),e("h3",{attrs:{id:"_2-为什么有时连续两次setstate只有一次生效"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-为什么有时连续两次setstate只有一次生效"}},[t._v("#")]),t._v(" 2.为什么有时连续两次"),e("code",[t._v("setState")]),t._v("只有一次生效？")]),t._v(" "),e("p",[t._v("分别执行以下代码：")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("  componentDidMount() {\n    this.setState({ index: this.state.index + 1 }, () => {\n      console.log(this.state.index);\n    })\n    this.setState({ index: this.state.index + 1 }, () => {\n      console.log(this.state.index);\n    })\n  }\n复制代码\n  componentDidMount() {\n    this.setState((preState) => ({ index: preState.index + 1 }), () => {\n      console.log(this.state.index);\n    })\n    this.setState(preState => ({ index: preState.index + 1 }), () => {\n      console.log(this.state.index);\n    })\n  }\n复制代码\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br")])]),e("p",[t._v("执行结果：")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("1\n1\n复制代码\n2\n2\n复制代码\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[t._v("说明：")]),t._v(" "),e("ul",[e("li",[t._v("1.直接传递对象的"),e("code",[t._v("setstate")]),t._v("会被合并成一次")]),t._v(" "),e("li",[t._v("2.使用函数传递"),e("code",[t._v("state")]),t._v("不会被合并")])]),t._v(" "),e("h2",{attrs:{id:"二-setstate执行过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二-setstate执行过程"}},[t._v("#")]),t._v(" 二.setState执行过程")]),t._v(" "),e("p",[t._v("由于源码比较复杂，就不贴在这里了，有兴趣的可以去"),e("code",[t._v("github")]),t._v("上"),e("code",[t._v("clone")]),t._v("一份然后按照下面的流程图去走一遍。")]),t._v(" "),e("h3",{attrs:{id:"_1-流程图"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-流程图"}},[t._v("#")]),t._v(" 1.流程图")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/2/23/169197bbdc7ae14e~tplv-t2oaga2asx-zoom-in-crop-mark:1304:0:0:0.awebp",alt:"setState"}})]),t._v(" "),e("p",[t._v("图不清楚可以点击")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("partialState")]),t._v("："),e("code",[t._v("setState")]),t._v("传入的第一个参数，对象或函数")]),t._v(" "),e("li",[e("code",[t._v("_pendingStateQueue")]),t._v("：当前组件等待执行更新的"),e("code",[t._v("state")]),t._v("队列")]),t._v(" "),e("li",[e("code",[t._v("isBatchingUpdates")]),t._v("：react用于标识当前是否处于批量更新状态，所有组件公用")]),t._v(" "),e("li",[e("code",[t._v("dirtyComponent")]),t._v("：当前所有处于待更新状态的组件队列")]),t._v(" "),e("li",[e("code",[t._v("transcation")]),t._v("：react的事务机制，在被事务调用的方法外包装n个"),e("code",[t._v("waper")]),t._v("对象，并一次执行："),e("code",[t._v("waper.init")]),t._v("、被调用方法、"),e("code",[t._v("waper.close")])]),t._v(" "),e("li",[e("code",[t._v("FLUSH_BATCHED_UPDATES")]),t._v("：用于执行更新的"),e("code",[t._v("waper")]),t._v("，只有一个"),e("code",[t._v("close")]),t._v("方法")])]),t._v(" "),e("h3",{attrs:{id:"_2-执行过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-执行过程"}},[t._v("#")]),t._v(" 2.执行过程")]),t._v(" "),e("p",[t._v("对照上面流程图的文字说明，大概可分为以下几步：")]),t._v(" "),e("ul",[e("li",[t._v("1.将setState传入的"),e("code",[t._v("partialState")]),t._v("参数存储在当前组件实例的state暂存队列中。")]),t._v(" "),e("li",[t._v("2.判断当前React是否处于批量更新状态，如果是，将当前组件加入待更新的组件队列中。")]),t._v(" "),e("li",[t._v("3.如果未处于批量更新状态，将批量更新状态标识设置为true，用事务再次调用前一步方法，保证当前组件加入到了待更新组件队列中。")]),t._v(" "),e("li",[t._v("4.调用事务的"),e("code",[t._v("waper")]),t._v("方法，遍历待更新组件队列依次执行更新。")]),t._v(" "),e("li",[t._v("5.执行生命周期"),e("code",[t._v("componentWillReceiveProps")]),t._v("。")]),t._v(" "),e("li",[t._v("6.将组件的state暂存队列中的"),e("code",[t._v("state")]),t._v("进行合并，获得最终要更新的state对象，并将队列置为空。")]),t._v(" "),e("li",[t._v("7.执行生命周期"),e("code",[t._v("componentShouldUpdate")]),t._v("，根据返回值判断是否要继续更新。")]),t._v(" "),e("li",[t._v("8.执行生命周期"),e("code",[t._v("componentWillUpdate")]),t._v("。")]),t._v(" "),e("li",[t._v("9.执行真正的更新，"),e("code",[t._v("render")]),t._v("。")]),t._v(" "),e("li",[t._v("10.执行生命周期"),e("code",[t._v("componentDidUpdate")]),t._v("。")])]),t._v(" "),e("h2",{attrs:{id:"三-总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三-总结"}},[t._v("#")]),t._v(" 三.总结")]),t._v(" "),e("h3",{attrs:{id:"_1-钩子函数和合成事件中"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-钩子函数和合成事件中"}},[t._v("#")]),t._v(" 1.钩子函数和合成事件中：")]),t._v(" "),e("p",[t._v("在"),e("code",[t._v("react")]),t._v("的生命周期和合成事件中，"),e("code",[t._v("react")]),t._v("仍然处于他的更新机制中，这时"),e("code",[t._v("isBranchUpdate")]),t._v("为true。")]),t._v(" "),e("p",[t._v("按照上述过程，这时无论调用多少次"),e("code",[t._v("setState")]),t._v("，都会不会执行更新，而是将要更新的"),e("code",[t._v("state")]),t._v("存入"),e("code",[t._v("_pendingStateQueue")]),t._v("，将要更新的组件存入"),e("code",[t._v("dirtyComponent")]),t._v("。")]),t._v(" "),e("p",[t._v("当上一次更新机制执行完毕，以生命周期为例，所有组件，即最顶层组件"),e("code",[t._v("didmount")]),t._v("后会将"),e("code",[t._v("isBranchUpdate")]),t._v("设置为false。这时将执行之前累积的"),e("code",[t._v("setState")]),t._v("。")]),t._v(" "),e("h3",{attrs:{id:"_2-异步函数和原生事件中"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-异步函数和原生事件中"}},[t._v("#")]),t._v(" 2.异步函数和原生事件中")]),t._v(" "),e("p",[t._v("由执行机制看，"),e("code",[t._v("setState")]),t._v("本身并不是异步的，而是如果在调用"),e("code",[t._v("setState")]),t._v("时，如果"),e("code",[t._v("react")]),t._v("正处于更新过程，当前更新会被暂存，等上一次更新执行后在执行，这个过程给人一种异步的假象。")]),t._v(" "),e("p",[t._v("在生命周期，根据JS的异步机制，会将异步函数先暂存，等所有同步代码执行完毕后在执行，这时上一次更新过程已经执行完毕，"),e("code",[t._v("isBranchUpdate")]),t._v("被设置为false，根据上面的流程，这时再调用"),e("code",[t._v("setState")]),t._v("即可立即执行更新，拿到更新结果。")]),t._v(" "),e("h3",{attrs:{id:"_3-partialstate合并机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-partialstate合并机制"}},[t._v("#")]),t._v(" 3."),e("code",[t._v("partialState")]),t._v("合并机制")]),t._v(" "),e("p",[t._v("我们看下流程中"),e("code",[t._v("_processPendingState")]),t._v("的代码，这个函数是用来合并"),e("code",[t._v("state")]),t._v("暂存队列的，最后返回一个合并后的"),e("code",[t._v("state")]),t._v("。")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("  _processPendingState: function (props, context) {\n    var inst = this._instance;\n    var queue = this._pendingStateQueue;\n    var replace = this._pendingReplaceState;\n    this._pendingReplaceState = false;\n    this._pendingStateQueue = null;\n\n    if (!queue) {\n      return inst.state;\n    }\n\n    if (replace && queue.length === 1) {\n      return queue[0];\n    }\n\n    var nextState = _assign({}, replace ? queue[0] : inst.state);\n    for (var i = replace ? 1 : 0; i < queue.length; i++) {\n      var partial = queue[i];\n      _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);\n    }\n\n    return nextState;\n  },\n复制代码\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br")])]),e("p",[t._v("我们只需要关注下面这段代码：")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" _assign(nextState, typeof partial === 'function' ? partial.call(inst, nextState, props, context) : partial);\n复制代码\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[t._v("如果传入的是对象，很明显会被合并成一次：")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("Object.assign(\n  nextState,\n  {index: state.index+ 1},\n  {index: state.index+ 1}\n)\n复制代码\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[t._v("如果传入的是函数，函数的参数preState是前一次合并后的结果，所以计算结果是准确的。")]),t._v(" "),e("h3",{attrs:{id:"_4-componentdidmount调用setstate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-componentdidmount调用setstate"}},[t._v("#")]),t._v(" 4."),e("code",[t._v("componentDidMount")]),t._v("调用"),e("code",[t._v("setstate")])]),t._v(" "),e("blockquote",[e("p",[t._v("在componentDidMount()中，你 可以立即调用setState()。它将会触发一次额外的渲染，但是它将在浏览器刷新屏幕之前发生。这保证了在此情况下即使render()将会调用两次，用户也不会看到中间状态。谨慎使用这一模式，因为它常导致性能问题。在大多数情况下，你可以 在constructor()中使用赋值初始状态来代替。然而，有些情况下必须这样，比如像模态框和工具提示框。这时，你需要先测量这些DOM节点，才能渲染依赖尺寸或者位置的某些东西。")])]),t._v(" "),e("p",[t._v("以上是官方文档的说明，不推荐直接在"),e("code",[t._v("componentDidMount")]),t._v("直接调用"),e("code",[t._v("setState")]),t._v("，由上面的分析："),e("code",[t._v("componentDidMount")]),t._v("本身处于一次更新中，我们又调用了一次"),e("code",[t._v("setState")]),t._v("，就会在未来再进行一次"),e("code",[t._v("render")]),t._v("，造成不必要的性能浪费，大多数情况可以设置初始值来搞定。")]),t._v(" "),e("p",[t._v("当然在"),e("code",[t._v("componentDidMount")]),t._v("我们可以调用接口，再回调中去修改"),e("code",[t._v("state")]),t._v("，这是正确的做法。")]),t._v(" "),e("p",[t._v("当state初始值依赖dom属性时，在"),e("code",[t._v("componentDidMount")]),t._v("中"),e("code",[t._v("setState")]),t._v("是无法避免的。")]),t._v(" "),e("h3",{attrs:{id:"_5-componentwillupdate-componentdidupdate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-componentwillupdate-componentdidupdate"}},[t._v("#")]),t._v(" 5."),e("code",[t._v("componentWillUpdate")]),t._v(" "),e("code",[t._v("componentDidUpdate")])]),t._v(" "),e("p",[t._v("这两个生命周期中不能调用"),e("code",[t._v("setState")]),t._v("。")]),t._v(" "),e("p",[t._v("由上面的流程图很容易发现，在它们里面调用"),e("code",[t._v("setState")]),t._v("会造成死循环，导致程序崩溃。")]),t._v(" "),e("h3",{attrs:{id:"_6-推荐使用方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-推荐使用方式"}},[t._v("#")]),t._v(" 6.推荐使用方式")]),t._v(" "),e("p",[t._v("在调用"),e("code",[t._v("setState")]),t._v("时使用函数传递"),e("code",[t._v("state")]),t._v("值，在回调函数中获取最新更新后的"),e("code",[t._v("state")]),t._v("。")]),t._v(" "),e("blockquote",[e("p",[t._v("作者：ConardLi"),e("br"),t._v("\n链接：https://juejin.cn/post/6844903781813993486")])])])}),[],!1,null,null,null);e.default=n.exports}}]);