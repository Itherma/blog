(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{519:function(t,e,a){"use strict";a.r(e);var _=a(0),l=Object(_.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"_1-js模块化方面的不足"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-js模块化方面的不足"}},[t._v("#")]),t._v(" 1. JS模块化方面的不足")]),t._v(" "),e("ul",[e("li",[t._v("JS没有模块系统，不支持封闭的作用域和依赖管理")]),t._v(" "),e("li",[t._v("没有标准库，没有文件系统和IO流API")]),t._v(" "),e("li",[t._v("也没有包管理系统")])]),t._v(" "),e("h2",{attrs:{id:"_2-commonjs规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-commonjs规范"}},[t._v("#")]),t._v(" 2. CommonJS规范")]),t._v(" "),e("ul",[e("li",[t._v("封装功能")]),t._v(" "),e("li",[t._v("封闭作用域")]),t._v(" "),e("li",[t._v("可能解决依赖问题")]),t._v(" "),e("li",[t._v("工作效率更高，重构方便")])]),t._v(" "),e("h2",{attrs:{id:"_3-node中的commonjs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-node中的commonjs"}},[t._v("#")]),t._v(" 3. Node中的CommonJS")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("在node.js 里，模块划分所有的功能，每个JS都是一个模块")])]),t._v(" "),e("li",[e("p",[t._v("实现require方法,NPM实现了模块的自动加载和安装依赖")]),t._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("(function(exports,require,module,__filename,__dirname){\n  exports = module.exports={}\n  exports.name = 'zfpx';\n  exports = {name:'zfpx'};\n  return module.exports;\n})\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])])])]),t._v(" "),e("h2",{attrs:{id:"_4-模块分类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-模块分类"}},[t._v("#")]),t._v(" 4. 模块分类")]),t._v(" "),e("h3",{attrs:{id:"_4-1-原生模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-原生模块"}},[t._v("#")]),t._v(" 4.1 原生模块")]),t._v(" "),e("p",[e("code",[t._v("http")]),t._v(" "),e("code",[t._v("path")]),t._v(" "),e("code",[t._v("fs")]),t._v(" "),e("code",[t._v("util")]),t._v(" "),e("code",[t._v("events")]),t._v(" 编译成二进制,加载速度最快，原来模块通过名称来加载")]),t._v(" "),e("h3",{attrs:{id:"_4-2-文件模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-文件模块"}},[t._v("#")]),t._v(" 4.2 文件模块")]),t._v(" "),e("p",[t._v("在硬盘的某个位置，加载速度非常慢，文件模块通过名称或路径来加载 文件模块的后缀有三种")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("后缀名为.js的JavaScript脚本文件,需要先读入内存再运行")])]),t._v(" "),e("li",[e("p",[t._v("后缀名为.json的JSON文件,fs 读入内存 转化成JSON对象")])]),t._v(" "),e("li",[e("p",[t._v("后缀名为.node的经过编译后的二进制C/C++扩展模块文件,可以直接使用")]),t._v(" "),e("blockquote",[e("p",[t._v("一般自己写的通过路径来加载,别人写的通过名称去当前目录或全局的node_modules下面去找")])])])]),t._v(" "),e("h3",{attrs:{id:"_4-3-第三方模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-第三方模块"}},[t._v("#")]),t._v(" 4.3 第三方模块")]),t._v(" "),e("ul",[e("li",[t._v("如果require函数只指定名称则视为从node_modules下面加载文件，这样的话你可以移动模块而不需要修改引用的模块路径")]),t._v(" "),e("li",[t._v("第三方模块的查询路径包括module.paths和全局目录")])]),t._v(" "),e("h4",{attrs:{id:"_4-3-1-全局目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-1-全局目录"}},[t._v("#")]),t._v(" 4.3.1 . 全局目录")]),t._v(" "),e("p",[t._v("window如果在环境变量中设置了"),e("code",[t._v("NODE_PATH")]),t._v("变量，并将变量设置为一个有效的磁盘目录，require在本地找不到此模块时向在此目录下找这个模块。 UNIX操作系统中会从 $HOME/.node_modules $HOME/.node_libraries目录下寻找")]),t._v(" "),e("h3",{attrs:{id:"_4-4-模块的加载策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-模块的加载策略"}},[t._v("#")]),t._v(" 4.4 模块的加载策略")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://xj-1253772569.file.myqcloud.com/img/lookmodule.png",alt:"lookmodule"}})]),t._v(" "),e("h3",{attrs:{id:"_4-5-文件模块查找规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-文件模块查找规则"}},[t._v("#")]),t._v(" 4.5 文件模块查找规则")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://xj-1253772569.file.myqcloud.com/img/lookfile.png",alt:"lookmodule"}})]),t._v(" "),e("h2",{attrs:{id:"_5-从模块外部访问模块内的成员"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-从模块外部访问模块内的成员"}},[t._v("#")]),t._v(" 5. 从模块外部访问模块内的成员")]),t._v(" "),e("ul",[e("li",[t._v("使用exports对象")]),t._v(" "),e("li",[t._v("使用module.exports导出引用类型")])]),t._v(" "),e("h2",{attrs:{id:"_6-模块对象的属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-模块对象的属性"}},[t._v("#")]),t._v(" 6. 模块对象的属性")]),t._v(" "),e("ul",[e("li",[t._v("module.id")]),t._v(" "),e("li",[t._v("module.filename")]),t._v(" "),e("li",[t._v("module.loaded")]),t._v(" "),e("li",[t._v("module.parent")]),t._v(" "),e("li",[t._v("module.children")]),t._v(" "),e("li",[t._v("module.paths")])]),t._v(" "),e("h2",{attrs:{id:"_7-包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-包"}},[t._v("#")]),t._v(" 7. 包")]),t._v(" "),e("p",[t._v("在Node.js中，可以通过包来对一组具有相互依赖关系的模块进行统一管理，通过包可以把某个独立功能封装起来 每个项目的根目录下面，一般都有一个package.json文件，定义了这个项目所需要的各种模块，以及项目的配置信息（比如名称、版本、许可证等元数据）。npm install命令根据这个配置文件，自动下载所需的模块，也就是配置项目所需的运行和开发环境")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("项目")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("name")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("项目名称")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("version")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("版本号")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("description")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("项目描述")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("keywords: {Array}")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("关键词，便于用户搜索到我们的项目")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("homepage")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("项目url主页")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("bugs")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("项目问题反馈的Url或email配置")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("license")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("项目许可证")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("author,contributors")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("作者和贡献者")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("main")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("主文件")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("bin")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("项目用到的可执行文件配置")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("repository")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("项目代码存放地方")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("scripts")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("声明一系列npm脚本指令")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("dependencies")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("项目在生产环境中依赖的包")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("devDependencies")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("项目在生产环境中依赖的包")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("peerDependencies")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("应用运行依赖的宿主包")])])])]),t._v(" "),e("h2",{attrs:{id:"_8-其他参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-其他参考"}},[t._v("#")]),t._v(" 8 其他参考")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://docs.npmjs.com/files/package.json",target:"_blank",rel:"noopener noreferrer"}},[t._v("npmjs package.json"),e("OutboundLink")],1),e("br"),t._v(" "),e("a",{attrs:{href:"http://javascript.ruanyifeng.com/nodejs/packagejson.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ruanyifeng package.json"),e("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=l.exports}}]);